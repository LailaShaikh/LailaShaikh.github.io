<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.3">Jekyll</generator><link href="//lailashaikh.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="//lailashaikh.github.io/" rel="alternate" type="text/html" /><updated>2016-04-27T19:30:55+00:00</updated><id>//lailashaikh.github.io/</id><title>Laila Shaikh</title><subtitle>web developer, Programmer</subtitle><entry><title>Example of Services in Angular Javascript</title><link href="//lailashaikh.github.io/Services/" rel="alternate" type="text/html" title="Example of Services in Angular Javascript" /><published>2016-04-27T00:00:00+00:00</published><updated>2016-04-27T00:00:00+00:00</updated><id>//lailashaikh.github.io/Services</id><content type="html" xml:base="//lailashaikh.github.io/Services/">&lt;p&gt;&lt;strong&gt;Services provide a way to make the data global around the app, share data, and functionality . The services we create are singletons that can be injected into controllers and other services.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After working with angular Javascipt, I discovered that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;we can also make single page applications in angular javascript.&lt;/li&gt;
  &lt;li&gt;We can create different views in it rather than pages, and then&lt;/li&gt;
  &lt;li&gt;We switch between views instead of pages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;In this example I will demonstrate how to use services:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;we will have four files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;index.html&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;LoginPage.html&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2ndPage.html&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Controller.js&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1. In Index.html :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;we will declare angular app&lt;/li&gt;
  &lt;li&gt;we will import libraries&lt;/li&gt;
  &lt;li&gt;we will create ngView which is a directive that complements the $route service by including the rendered template of the current route into   the main layout (index.html) file. Every time the current route changes, the included view changes with it according to the configuration of   the $route service.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Sample Code:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-app=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;angularApp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//code.angularjs.org/1.3.0-rc.1/angular.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//code.angularjs.org/1.3.0-rc.1/angular-route.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;controller.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-view&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. In LoginPage.html:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have two fields:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;username&lt;/li&gt;
  &lt;li&gt;password&lt;/li&gt;
  &lt;li&gt;Submit Button&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;as in the figure :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//lailashaikh.github.io/assets/img/login.PNG&quot; alt=&quot;Unclean shutdown detected&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div ng-controller=&quot;loginController&quot;&amp;gt;
    &amp;lt;!--Sign in form--&amp;gt;
    &amp;lt;form class=&quot;form-signin&quot; ng-submit=setName()&amp;gt;
    &amp;lt;/br&amp;gt;
        &amp;lt;input type=&quot;text&quot; ng-model=&quot;name&quot; name=&quot;LoginUser&quot; class=&quot;form-control&quot; placeholder=&quot;Username&quot; id=&quot;submitSignin&quot; required autofocus&amp;gt;    
        &amp;lt;input type=&quot;password&quot; ng-model=&quot;PasswordL&quot; name=&quot;LoginPass&quot; class=&quot;form-control&quot; placeholder=&quot;Password&quot; id=&quot;submitSignin&quot; required&amp;gt;
        &amp;lt;button class=&quot;btn btn-lg btn-primary btn-block&quot; type=&quot;submit&quot; name=&quot;submit&quot; id=&quot;submitSignin&quot; value=&quot;login&quot;&amp;gt;Sign in&amp;lt;/button&amp;gt;
    &amp;lt;/form&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this div, we have intialized the name of controller, so that as soon as user click submit, It will be linked to ‘loginController’ Controller ,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 2ndPage.html&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;whatever you insert into the username field that should appear in this page&lt;/li&gt;
  &lt;li&gt;this div will be directed to the ChatControllerrrrrrrrrrrrrrrrr&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;//lailashaikh.github.io/assets/img/LoginApproved.PNG&quot; alt=&quot;Unclean shutdown detected&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Controller.js&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We will  make a module&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; var angularApp = angular.module(&#39;angularApp&#39;, [&#39;ngRoute&#39;])
		
  angularApp.config(function ($routeProvider) {
      $routeProvider`
          .when(&quot;/&quot;,{templateUrl: &quot;LoginPage.html&quot;,controller: &quot;loginController&quot;  })`
          .when(&quot;/2ndPage&quot;,{templateUrl: &quot;2ndPage.html&quot;, controller: &quot;ChatController&quot; });`        
  });
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;we will make a service:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; angularApp.service(&#39;factory&#39;, function () {
     this.loginTrue = &quot;&quot;;
 });
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;we will make controllers&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; angularApp.controller(&#39;loginController&#39;,function($scope , $location , factory , $route)
 {
     $scope.name=&#39;&#39;;
     $scope.PasswordL=&#39;&#39;;   
     $scope.setName=function setName()
     {
         factory.loginTrue=$scope.name;
         console.log(factory.loginTrue);
         $location.path(&quot;/2ndPage&quot;);
         $route.reload();
     };
 });
 angularApp.controller(&#39;ChatController&#39;, function ($scope, factory , $location)
 {
     console.log(factory.loginTrue);
     $scope.loginUser=factory.loginTrue;
     $scope.$apply();
 });
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So basically we have created a service here to make a variable global,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In the first Controller that is the loginController, We are grabbing the username the user inserts in the login Page&lt;/li&gt;
  &lt;li&gt;storing the value of that username in to the variable we have declared in the service to make the value global&lt;/li&gt;
  &lt;li&gt;Using that value that we stored in the service, we will use it in another controller and ultimately in another view.&lt;/li&gt;
&lt;/ul&gt;</content><summary>MathJax Example for Moon Jekyll Theme.</summary></entry><entry><title>Resolving mongo error</title><link href="//lailashaikh.github.io/mongo-error/" rel="alternate" type="text/html" title="Resolving mongo error" /><published>2016-04-26T00:00:00+00:00</published><updated>2016-04-26T00:00:00+00:00</updated><id>//lailashaikh.github.io/mongo-error</id><content type="html" xml:base="//lailashaikh.github.io/mongo-error/">&lt;p&gt;&lt;strong&gt;While working on mongodb, most of the times I came through an error while starting the server by using the command:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       ./mongod
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;The error was:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//lailashaikh.github.io/assets/img/MongoError1.PNG&quot; alt=&quot;Unclean shutdown detected&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After researching on internet I came with the reason and solution of it:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reason&lt;/strong&gt;
Its because you did not the shutdown the server properly, therefore it got crashed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;
The most easiest way to repair is to look for the lockfile which would have been created resultantly, manually delete it. 
and you are done!!!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//lailashaikh.github.io/assets/img/lockFile.PNG&quot; alt=&quot;Unclean shutdown detected&quot; /&gt;&lt;/p&gt;</content><summary>server crash in mongo</summary></entry></feed>
